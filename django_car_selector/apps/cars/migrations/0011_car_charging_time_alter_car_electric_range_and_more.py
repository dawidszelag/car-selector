# Generated by Django 4.0 on 2022-09-10 18:56

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cars', '0010_alter_car_acceleration_alter_car_ancap_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='car',
            name='charging_time',
            field=models.FloatField(null=True, verbose_name='Charging time 0-100% 7.4 KW'),
        ),
        migrations.AlterField(
            model_name='car',
            name='electric_range',
            field=models.PositiveIntegerField(default=None, null=True, verbose_name='Electric range (KM)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='foldable_seats',
            field=models.BooleanField(default=None, null=True),
        ),
        migrations.AlterField(
            model_name='car',
            name='fuel_average_distance',
            field=models.PositiveIntegerField(null=True, verbose_name='Fuel average distance (KM)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='fuel_capacity',
            field=models.PositiveIntegerField(null=True, verbose_name='Fuel capacity L'),
        ),
        migrations.AlterField(
            model_name='car',
            name='fuel_combined',
            field=models.FloatField(null=True, verbose_name='Fuel combined (L/KM)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='fuel_type',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Petrol'), (2, 'Diesel'), (3, 'Electric'), (4, 'Plug in Hybrid & Petrol'), (5, 'Hybrid Petrol')], null=True),
        ),
        migrations.AlterField(
            model_name='car',
            name='fuel_urban',
            field=models.FloatField(null=True, verbose_name='Fuel urban (L/KM)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='ground_clearance',
            field=models.PositiveIntegerField(null=True, verbose_name='Ground clearance (MM)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='height',
            field=models.PositiveIntegerField(null=True, verbose_name='Height (MM)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='length',
            field=models.PositiveIntegerField(null=True, verbose_name='Length (MM)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='max_boot_space',
            field=models.PositiveIntegerField(null=True, verbose_name='Max boot space (L)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='max_fuel_distance',
            field=models.PositiveIntegerField(null=True, verbose_name='Max fuel distance (KM)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='min_boot_space',
            field=models.PositiveIntegerField(null=True, verbose_name='Min boot space (L)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='min_fuel_distance',
            field=models.PositiveIntegerField(null=True, verbose_name='Min fuel distance (KM)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='race_track',
            field=models.PositiveSmallIntegerField(blank=True, choices=[(1, 'No'), (2, 'Medium'), (3, 'Well')], help_text='range (1-10)', null=True, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterField(
            model_name='car',
            name='tare_mass',
            field=models.PositiveIntegerField(null=True, verbose_name='Tare mass (KG)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='wheelbase',
            field=models.PositiveIntegerField(null=True, verbose_name='Wheelbase (MM)'),
        ),
        migrations.AlterField(
            model_name='car',
            name='width',
            field=models.PositiveIntegerField(null=True, verbose_name='Width (MM)'),
        ),
    ]
